package service;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.concurrent.TimeUnit;

import controller.Controller;
import dao.MarketDAO;
import util.ScanUtil;
import util.SpaceUtil;
import util.View;

public class MarketService {

	private static MarketService instance = null;

	private MarketService() {
	};

	public static MarketService getInstance() {
		if (instance == null) {
			instance = new MarketService();
		}
		return instance;
	}

//	Controller con = Controller.getInstance
	MarketDAO dao = MarketDAO.getInstance();
	int buyNum = 0; // Íµ¨Îß§Ìï† ÏÉÅÌíà Î≤àÌò∏
	int buyNum2 = 0; // ÏÉÅÌíà Ï†ïÎ≥¥ Î≥¥Í≥† ÎÇòÏÑú Î∞îÎ°ú Íµ¨Îß§Ìï† Ïãú Îì§Ïñ¥Í∞ÄÎäî ÏÉÅÌíà Î≤àÌò∏
	int buyQty = 0; // Íµ¨Îß§Ìï† ÏÉÅÌíà ÏàòÎüâ
	int input = 0; // Ïñ¥Îñ§ ÎèôÎ¨º Ïö©Ìíà ÏÇ¥Í±¥ÏßÄ ÏûÖÎ†•Î∞õÎäî Î≥ÄÏàò
	int myMile = 0; // ÎÇ¥ ÎßàÏùºÎ¶¨ÏßÄ
	int money = 0; // Ïû•Î∞îÍµ¨Îãà Í≤∞Ï†úÍ∏àÏï°
	int paidMoney = 0; // Íµ¨Îß§Î¶¨Ïä§Ìä∏ Í≤∞Ï†ú ÌôïÏ†ï Í∏àÏï°
	int paidMoney2 = 0; // Íµ¨Îß§Î¶¨Ïä§Ìä∏ Í≤∞Ï†ú ÌôïÏ†ï Í∏àÏï°
	int choiceMoney = 0; // ÏÑ†ÌÉù Íµ¨Îß§ Í≤∞Ï†ú ÌôïÏ†ï Í∏àÏï°
	List<Object> selectCart = new ArrayList<>();

	static public void makeinstance() {

	}

	public int choiceMenu() {


		clearScreen();
		System.out.println("========================Íµ¨Îß§ ÌéòÏù¥ÏßÄ==========================");
		System.out.println("-------------------------------------------------------------");		
		System.out.println("1. ÏÉÅÌíà Î≥¥Í∏∞");
		System.out.println("2. ÎÇ¥ Ï†ïÎ≥¥ Î≥¥Í∏∞");
		System.out.println("3. Î©îÏù∏ ÌéòÏù¥ÏßÄ ÎèåÏïÑÍ∞ÄÍ∏∞");
		System.out.println("-------------------------------------------------------------");	
		System.out.println("ÏûÖÎ†•>>");
		switch (ScanUtil.nextInt()) {
		case 1:
			clearScreen();
			return View.MARKET_PRODTYPE;
		case 2:
			clearScreen();
			return View.MARKET_MYINFO;
		case 3:
		default:
			clearScreen();
			return View.HOME;
		}
	}

	public int showList() {

		System.out.println("=========================Ïö©Ìíà ÏÑ†ÌÉù===========================");
		System.out.println("-------------------------------------------------------------");		
		System.out.println("1.Í∞ïÏïÑÏßÄ Ïö©Ìíà");
		System.out.println("2.Í≥†ÏñëÏù¥ Ïö©Ìíà");
		System.out.println("3.Í∏∞ÌÉÄ ÎèôÎ¨º Ïö©Ìíà");
		System.out.println("-------------------------------------------------------------");		
		System.out.println("ÏûÖÎ†•>>");
		input = ScanUtil.nextInt();
		switch(input) {
		case 1:
			clearScreen();
			System.out.println("");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚£†‚£∂‚£∂‚£§‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£¥‚£∂‚£¶‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚†ô‚†ª‚£ø‚£¶‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚£æ‚°ø‚†ü‚¢π‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚†Ä‚†Ä‚†à‚†ª‚£ø‚£∑‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚£ø‚°ø‚†ã‚†Ä‚†Ä‚¢∏‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ô‚¢ø‚£ø‚£∂‚£∂‚£∂‚£∂‚£æ‚£ø‚†ü‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†â‚†â‚†â‚†â‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£º‚£ø‚£ø‚°Ü‚†Ä‚†Ä‚†Ä‚£æ‚£ø‚£ø‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†π‚†ø‚†ø‚†É‚†Ä‚†Ä‚†Ä‚†ª‚†ø‚†ø‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£á‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£∂‚£∂‚£∂‚£∂‚£¶‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢ø‚£ø‚£ø‚£ø‚†ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚°Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚†Ä‚†Ä‚†Ä‚¢π‚£ø‚†Å‚†Ä‚†Ä‚¢Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚£ø‚£Ü‚°Ä‚£Ä‚£º‚£ø‚£Ñ‚°Ä‚£Ä‚£æ‚°ü‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚°ü‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†õ‚†ø‚†ü‚†ã‚†â‚†õ‚†ø‚†ü‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚°ø‚†ü‚†ã‚†Ä‚†à‚†ô‚†ø‚†ø‚†ø‚†õ‚†Å‚†Ä‚†ô‚†ª‚†ø‚†ø‚†ü‚†ã‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†ò‚£ø‚£∑‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£∞‚£ø‚°ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†õ‚¢ø‚£ø‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£æ‚£ø‚†ø‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("========================ü¶ùÍ∞ïÏïÑÏßÄ Ïö©Ìíàü¶ù=============================");
			System.out.println("-------------------------------------------------------------------");		
			System.out.println("Î≤àÌò∏\tÎ∂ÑÎ•ò\t\t\tÏÉÅÌíàÎ™Ö\t\t\t  Í∞ÄÍ≤©");
			System.out.println("-------------------------------------------------------------------");	
			List<Map<String, Object>> dogList = dao.dogList();
			for(Map<String, Object> item : dogList) {
				System.out.printf("%2s",item.get("PROD_NUM"));
				System.out.printf("\t%6s", item.get("PROD_TYPE"));
				System.out.printf("\t\t%-15s", item.get("PROD_NAME"));
				System.out.printf("\t%7s", String.format("%,6d", Integer.parseInt(String.valueOf(item.get("PROD_PRICE")))));
				System.out.println();
			}
			break;
		case 2:
			clearScreen();
			
			System.out.println("");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∏‚£ü‚£õ‚†∑‚£¶‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£¥‚†æ‚£õ‚£ª‚£á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ª‚°è‚†õ‚¢∑‚£Æ‚°õ‚¢∑‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚°æ‚¢õ‚£µ‚°æ‚†ã‚¢π‚°ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°á‚†Ä‚†Ä‚†ô‚¢ø‚£¶‚†ô‚¢∑‚£Ñ‚£§‚£§‚£¥‚£∂‚£∂‚£∂‚£¶‚£§‚£§‚£†‚°æ‚†ã‚£¥‚°ø‚†ã‚†Ä‚†Ä‚¢∏‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°á‚†Ä‚†Ä‚†Ä‚£†‚£Ω‚†ø‚†õ‚†ã‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†â‚†õ‚†ø‚£Ø‚£Ñ‚†Ä‚†Ä‚†Ä‚£∏‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚£ø‚¢Ä‚£¥‚°ø‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚¢ø‚£¶‚°Ä‚£ø‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚°ø‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚¢ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚°ü‚†Ä‚†Ä‚†Ä‚†Ä‚£¥‚°æ‚¢∑‚£¶‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£¥‚°æ‚¢∑‚£¶‚†Ä‚†Ä‚†Ä‚†à‚¢ª‚£Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚†Å‚†Ä‚†Ä‚†Ä‚¢∏‚°è‚¢∞‚£ø‚£ø‚£á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∏‚°è‚¢∞‚£ü‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†à‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£á‚†Ä‚†õ‚£ª‚°è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢π‚£á‚†à‚†õ‚£ª‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ª‚¢∑‚°æ‚†ü‚†Å‚†Ä‚£¥‚†æ‚†ø‚†∑‚£¶‚†Ä‚†Ä‚†ª‚¢∑‚°æ‚†ü‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢π‚£á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚†∑‚£∂‚†æ‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£º‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†π‚£ß‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£¶‚†Ä‚†Ä‚†Ä‚£ø‚†Ä‚†Ä‚†Ä‚£∞‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£º‚£ø‚¢ø‚£ø‚£ø‚£ø‚£ø‚°ø‚£ø‚£ø‚£ø‚£ø‚°ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†á‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚¢ø‚£¶‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ª‚£∂‚£∂‚°æ‚†õ‚¢∑‚£∂‚£∂‚†ü‚†Å‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚°ø‚†õ‚†ã‚†Ä‚†ô‚†õ‚†õ‚†ã‚†Ä‚†â‚†õ‚†õ‚†õ‚†Å‚£à‚£õ‚†õ‚†õ‚†Å‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†õ‚¢∑‚£¶‚£Ñ‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£†‚£¥‚£æ‚°ü‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†â‚†õ‚†ª‚†ø‚†∂‚†∂‚†∂‚†∂‚†∂‚†ø‚†ü‚†õ‚†â‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚£á‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†õ‚†õ‚†õ‚†õ‚†õ‚†õ‚†õ‚†õ‚†õ‚†õ‚†õ‚†õ‚†õ‚†õ‚†õ‚†õ‚†õ‚†õ‚†õ‚†õ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("========================ü¶ùÍ≥†ÏñëÏù¥ Ïö©Ìíàü¶ù=============================");
			System.out.println("-------------------------------------------------------------------");		
			System.out.println("Î≤àÌò∏\tÎ∂ÑÎ•ò\t\t\tÏÉÅÌíàÎ™Ö\t\t\t  Í∞ÄÍ≤©");
			System.out.println("-------------------------------------------------------------------");
			List<Map<String, Object>> catList = dao.catList();
			for(Map<String, Object> item : catList) {
				System.out.print(item.get("PROD_NUM"));
				System.out.print( "\t"+item.get("PROD_TYPE"));
				System.out.printf("\t\t%-7s" , item.get("PROD_NAME"));
				System.out.print("\t\t" + String.format("%,6d", Integer.parseInt(String.valueOf(item.get("PROD_PRICE")))));
//			System.out.print("\t" + item.get("PROD_INFO"));
				System.out.println();
			}
			break;
		case 3:
			clearScreen();
			System.out.println("");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£§‚£§‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚°ø‚†ã‚†ô‚¢ø‚£¶‚°Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£¥‚°ø‚†ã‚†Ä‚†Ä‚†Ä‚£∞‚£ø‚†É‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚†ø‚†Å‚†Ä‚†Ä‚£†‚£æ‚†ü‚†Å‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚°ø‚†É‚†Ä‚£†‚£æ‚†ø‚†õ‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚°ø‚†É‚†Ä‚£†‚£æ‚†ü‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚°ø‚†õ‚†õ‚†ª‚¢∑‚£¶‚£Ñ‚¢Ä‚£¥‚°ø‚†ã‚†Ä‚£†‚£æ‚†ü‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚°ø‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢à‚£ø‚°ø‚†ã‚†Ä‚£†‚£æ‚†ü‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚°ø‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚°ø‚†ã‚†Ä‚£†‚£æ‚£ü‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚£§‚£¥‚£∂‚°æ‚†ü‚†ã‚†Ä‚†Ä‚£†‚£¥‚£∂‚£∂‚°ø‚†ã‚†Ä‚£†‚£æ‚†ü‚†â‚¢ø‚£¶‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£§‚£æ‚†ø‚†õ‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£æ‚†ü‚†Å‚†Ä‚†Ä‚†Ä‚¢†‚£æ‚†ü‚†Å‚†Ä‚†Ä‚†Ä‚¢ª‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚°ø‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£æ‚†è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢ø‚£¶‚£Ä‚£Ä‚£Ä‚£§‚°ø‚†É‚†Ä‚†Ä‚†Ä‚£Ä‚£¥‚£ø‚£∑‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£¶‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£¶‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†õ‚†õ‚†õ‚†ã‚†Ä‚†Ä‚¢Ä‚£¥‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£∑‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∫‚£ø‚°ô‚¢ø‚£¶‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£Ñ‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚£†‚£æ‚£ø‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚¢ø‚£¶‚°ô‚£ø‚£¶‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚°Ñ‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚¢π‚£ø‚£ø‚£∑‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚†ø‚†ü‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£æ‚£ø‚£ø‚£ø‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†É‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚†ø‚£ø‚£ø‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£º‚£ø‚£ø‚†ü‚†Å‚†à‚†ª‚¢ø‚£ø‚£ø‚£ø‚°ø‚†õ‚†Ä‚†ò‚†ø‚£ø‚£ø‚£ø‚£ø‚†ø‚†É‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢ª‚£∑‚£Ñ‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£æ‚†ü‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚£∂‚£∂‚£∂‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ß‚£§‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚£∂‚†ø‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚°è‚†ô‚†õ‚†ª‚†ø‚†ø‚†ø‚†ü‚†ã‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£∑‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£∂‚£æ‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä");
			System.out.println("========================ü¶ùÍ∏∞ÌÉÄ ÎèôÎ¨º Ïö©Ìíàü¶ù============================");
			System.out.println("----------------------------------------------------------------------");		
			System.out.println("Î≤àÌò∏\tÎ∂ÑÎ•ò\t\t\tÏÉÅÌíàÎ™Ö\t\t\t  Í∞ÄÍ≤©");
			System.out.println("----------------------------------------------------------------------");
			List<Map<String, Object>> etcList = dao.etcList();
			for(Map<String, Object> item : etcList) {
				System.out.print(item.get("PROD_NUM"));
				System.out.print( "\t"+item.get("PROD_TYPE"));
				System.out.print("\t\t" +SpaceUtil.format(item.get("PROD_NAME"), 10));
				System.out.print("\t\t" + String.format("%,6d", Integer.parseInt(String.valueOf(item.get("PROD_PRICE")))));
				System.out.println();
			}
			break;
		}
//		for(int i = 0; i<list.size(); i++) {
//			Map<String, Object> item = list.get(i);
//			System.out.print(i+1);
//			System.out.print("\t" + item.get("PROD_TYPE"));
//			System.out.print("\t" +item.get("PROD_NAME"));
//			System.out.print("\t" + item.get("PROD_PRICE"));
////			System.out.print("\t" + item.get("PROD_INFO"));
//			
//			System.out.println();
//			
//		}
		if(Controller.admin) {
			while(true) {
				System.out.println("----------------------------------------------------------------------");
				System.out.println("1. ÏÉÅÌíàÏ∂îÍ∞Ä  2. ÏÉÅÌíàÏÇ≠Ï†ú  0. ÎèåÏïÑÍ∞ÄÍ∏∞");
				System.out.println("----------------------------------------------------------------------");
				System.out.println("ÏûÖÎ†•>>");
				System.out.println("----------------------------------------------------------------------");
				switch(ScanUtil.nextInt()) {
				case 1: return View.ADMIN_MARKETPROD;
				case 2: clearScreen(); return View.ADMIN_PROD_DELETE;
				case 0: clearScreen(); return View.ADMIN_MARKET;
				default: 
					System.out.println("ÏûòÎ™ªÏûÖÎ†•");
					break;
				}
			}
		
			
		}else {
			
			System.out.println("---------------------------------------------------------------------");
			System.out.println("1.ÏÉÅÌíàÏ†ïÎ≥¥ ÌôïÏù∏        2.Íµ¨Îß§ÌïòÍ∏∞        3.ÎÇ¥ Ï†ïÎ≥¥        4. ÎèåÏïÑÍ∞ÄÍ∏∞");
			System.out.println("---------------------------------------------------------------------");
			System.out.println("ÏûÖÎ†•>>");
			System.out.println("---------------------------------------------------------------------");
			switch(ScanUtil.nextInt()) {
			case 1: return View.MARKET_PRODINFO;
			case 2: clearScreen(); return View.MARKET_BUY;
			case 3: clearScreen(); return View.MARKET_MYINFO;
			case 4: default: clearScreen(); return View.MARKET;
			}
			
		}

	}

	//ÏÉÅÌíàÏ†ïÎ≥¥/Î¶¨Î∑∞ Î≥¥Í∏∞
		public int showProdInfo() {
			System.out.println();
			if(input == 1) {
				System.out.println("---------------------------------------------------------------------");
				System.out.println("ÏÉÅÌíà Î≤àÌò∏ ÏûÖÎ†•");
				System.out.println("ÏàúÎ≤à ÏûÖÎ†•>>");
				System.out.println("---------------------------------------------------------------------");
				buyNum2 = ScanUtil.nextInt();			
				List<Map<String,Object>> dogInfo = dao.dogInfo(buyNum2);
				clearScreen();
				for(Map<String, Object> item : dogInfo) {
					System.out.println("============================ÏÉÅÌíàÏÑ§Î™Ö=================================");				
					System.out.println("---------------------------------------------------------------------");
					System.out.println(item.get("PROD_INFO"));
					System.out.println("---------------------------------------------------------------------");
					List<Map<String,Object>> review = dao.review(item.get("PROD_ID").toString());
					if(review == null) {
						System.out.println(" Îì±Î°ùÎêú Î¶¨Î∑∞Í∞Ä Ï°¥Ïû¨ÌïòÏßÄ ÏïäÏäµÎãàÎã§ ");
						System.out.println("---------------------------------------------------------------------");
						System.out.println("---------------------------------------------------------------------");
						System.out.println("1.Íµ¨Îß§      2.ÏÉÅÌíà ÎçîÎ≥¥Í∏∞ ");
						System.out.println("---------------------------------------------------------------------");
						System.out.println("ÏûÖÎ†• >>");
						System.out.println("---------------------------------------------------------------------");
						switch(ScanUtil.nextInt()) {
						case 1: return View.MARKET_CARTINSERT2;
						case 2:  clearScreen(); return View.MARKET_PRODTYPE;
						}
					}else {
						System.out.println("================================Î¶¨Î∑∞=================================");				
						for(int i = 0; i<review.size(); i++) {
							Map<String, Object> item2 = review.get(i);
							System.out.println("Ï†úÎ™©: "+item2.get("REVIEW_TITLE"));
							System.out.println("ÏûëÏÑ±Ïûê: "+item2.get("MEM_ID"));
							System.out.println("ÎÇ¥Ïö©: " + item2.get("REVIEW_CONTENT"));
							System.out.print("ÏûëÏÑ±ÏùºÏãú: " + item2.get("REVIEW_DATE"));
							System.out.println();
							System.out.println("---------------------------------------------------------------------");
							}
						}	
							
						System.out.println("1.Íµ¨Îß§   2.ÏÉÅÌíà ÎçîÎ≥¥Í∏∞ ");
						System.out.println("ÏûÖÎ†• >>");
						System.out.println("---------------------------------------------------------------------");
						switch(ScanUtil.nextInt()) {
						case 1: return View.MARKET_CARTINSERT2;
						case 2: clearScreen(); return View.MARKET_PRODTYPE;
					}
				}
			}else if(input == 2) {
				System.out.println("---------------------------------------------------------------------");
				System.out.println("ÏÉÅÌíà Î≤àÌò∏ ÏûÖÎ†•");
				System.out.println("ÏàúÎ≤à ÏûÖÎ†•>>");
				System.out.println("---------------------------------------------------------------------");
				buyNum2 = ScanUtil.nextInt();	
				List<Map<String,Object>> catInfo = dao.catInfo(buyNum2);
				for(Map<String, Object> item : catInfo) {
					System.out.println("============================ÏÉÅÌíàÏÑ§Î™Ö=================================");				
					System.out.println("---------------------------------------------------------------------");
					System.out.println(item.get("PROD_INFO"));
					System.out.println("---------------------------------------------------------------------");
					List<Map<String,Object>> review = dao.review(item.get("PROD_ID").toString());
					if(review == null) {
						System.out.println(" Îì±Î°ùÎêú Î¶¨Î∑∞Í∞Ä Ï°¥Ïû¨ÌïòÏßÄ ÏïäÏäµÎãàÎã§ ");
						System.out.println("---------------------------------------------------------------------");
						System.out.println("---------------------------------------------------------------------");
						System.out.println("1.Íµ¨Îß§      2.ÏÉÅÌíà ÎçîÎ≥¥Í∏∞ ");
						System.out.println("---------------------------------------------------------------------");
						System.out.println("ÏûÖÎ†• >>");
						System.out.println("---------------------------------------------------------------------");
						switch(ScanUtil.nextInt()) {
						case 1: return View.MARKET_CARTINSERT2;
						case 2: clearScreen(); return View.MARKET_PRODTYPE;
						}
					}else {
						System.out.println("================================Î¶¨Î∑∞=================================");				
						for(int i = 0; i<review.size(); i++) {
							Map<String, Object> item2 = review.get(i);
							System.out.println();
							System.out.println("Ï†úÎ™©: "+item2.get("REVIEW_TITLE"));
							System.out.println("ÏûëÏÑ±Ïûê: "+item2.get("MEM_ID"));
							System.out.println("ÎÇ¥Ïö©: " + item2.get("REVIEW_CONTENT"));
							System.out.print("ÏûëÏÑ±ÏùºÏãú: " + item2.get("REVIEW_DATE"));
							System.out.println();
							System.out.println();
							System.out.println("---------------------------------------------------------------------");
							}
						System.out.println("1.Íµ¨Îß§   2.ÏÉÅÌíà ÎçîÎ≥¥Í∏∞ ");
						System.out.println("ÏûÖÎ†• >>");
						System.out.println("---------------------------------------------------------------------");
						switch(ScanUtil.nextInt()) {
						case 1: return View.MARKET_CARTINSERT2;
						case 2: clearScreen(); return View.MARKET_PRODTYPE;
					}
					}
				}
			}else {
				System.out.println("---------------------------------------------------------------------");
				System.out.println("ÏÉÅÌíà Î≤àÌò∏ ÏûÖÎ†•");
				System.out.println("ÏàúÎ≤à ÏûÖÎ†•>>");
				System.out.println("---------------------------------------------------------------------");
				buyNum2 = ScanUtil.nextInt();	
				List<Map<String,Object>> etcInfo = dao.etcInfo(buyNum2);
				for(Map<String, Object> item : etcInfo) {
					System.out.println("============================ÏÉÅÌíàÏÑ§Î™Ö=================================");				
					System.out.println("---------------------------------------------------------------------");
					System.out.println(item.get("PROD_INFO"));
					System.out.println("---------------------------------------------------------------------");
					List<Map<String,Object>> review = dao.review(item.get("PROD_ID").toString());
					if(review == null) {
						System.out.println(" Îì±Î°ùÎêú Î¶¨Î∑∞Í∞Ä Ï°¥Ïû¨ÌïòÏßÄ ÏïäÏäµÎãàÎã§ ");
						System.out.println("---------------------------------------------------------------------");
						System.out.println("---------------------------------------------------------------------");
						System.out.println("1.Íµ¨Îß§      2.ÏÉÅÌíà ÎçîÎ≥¥Í∏∞ ");
						System.out.println("---------------------------------------------------------------------");
						System.out.println("ÏûÖÎ†• >>");
						System.out.println("---------------------------------------------------------------------");
						switch(ScanUtil.nextInt()) {
						case 1:  return View.MARKET_CARTINSERT2;
						case 2: clearScreen(); return View.MARKET_PRODTYPE;
						}
					}else {
						for(int i = 0; i<review.size(); i++) {
							Map<String, Object> item2 = review.get(i);
							System.out.println();
							System.out.println("Ï†úÎ™©: "+item2.get("REVIEW_TITLE"));
							System.out.println("ÏûëÏÑ±Ïûê: "+item2.get("MEM_ID"));
							System.out.println("ÎÇ¥Ïö©: " + item2.get("REVIEW_CONTENT"));
							System.out.print("ÏûëÏÑ±ÏùºÏãú: " + item2.get("REVIEW_DATE"));
							System.out.println();
							System.out.println("---------------------------------------------------------------------");
							}
						System.out.println("1.Íµ¨Îß§   2.ÏÉÅÌíà ÎçîÎ≥¥Í∏∞ ");
						System.out.println("ÏûÖÎ†• >>");
						System.out.println("---------------------------------------------------------------------");
						switch(ScanUtil.nextInt()) {
						case 1: return View.MARKET_CARTINSERT2;
						case 2: clearScreen(); return View.MARKET_PRODTYPE;
					}
					}
				}
		}
			return View.MARKET;
		}

	public int buyProcess() {
		clearScreen();
		if (input == 1) {
			System.out.println("===========================ÏÉÅÌíàÎ™©Î°ù==================================");
			System.out.println("---------------------------------------------------------------------");
			System.out.println("Î≤àÌò∏\tÎ∂ÑÎ•ò\t\tÏÉÅÌíàÎ™Ö\t\t\tÍ∞ÄÍ≤©");
			System.out.println("---------------------------------------------------------------------");
			List<Map<String, Object>> dogList = dao.dogList();
			for (Map<String, Object> item : dogList) {
				System.out.print(item.get("PROD_NUM"));
				System.out.print("\t" + item.get("PROD_TYPE"));
				System.out.print("\t\t" + item.get("PROD_NAME"));
				System.out.print(
						"\t\t" + String.format("%,6d", Integer.parseInt(String.valueOf(item.get("PROD_PRICE")))));
				System.out.println();
			}
			System.out.println("---------------------------------------------------------------------");
			System.out.println("1.Ïû•Î∞îÍµ¨Îãà Îã¥Í∏∞        2.Ïû•Î∞îÍµ¨Îãà Í∞ÄÍ∏∞        3.ÎèåÏïÑÍ∞ÄÍ∏∞");
			System.out.println("ÏûÖÎ†•>>");
			System.out.println("---------------------------------------------------------------------");
			switch (ScanUtil.nextInt()) {
			case 1:
				return View.MARKET_CARTINSERT;
			case 2:
				clearScreen();
				return View.MARKET_CARTLIST;
			case 3:
				clearScreen();
				return View.MARKET;
			}
		} else if (input == 2) {
			System.out.println("===========================ÏÉÅÌíàÎ™©Î°ù==================================");
			System.out.println("---------------------------------------------------------------------");
			System.out.println("Î≤àÌò∏\tÎ∂ÑÎ•ò\t\tÏÉÅÌíàÎ™Ö\t\t\tÍ∞ÄÍ≤©");
			System.out.println("---------------------------------------------------------------------");
			List<Map<String, Object>> catList = dao.catList();
			for(Map<String, Object> item : catList) {
				System.out.print(SpaceUtil.format(item.get("PROD_NUM"), 2,true));
				System.out.print("\t" + SpaceUtil.format(item.get("PROD_TYPE"), 7));
				System.out.print("\t" + SpaceUtil.format(item.get("PROD_NAME"), 12));
				System.out.print("\t\t" + String.format("%,6d", Integer.parseInt(String.valueOf(item.get("PROD_PRICE")))));
				System.out.println();

			}
			System.out.println("---------------------------------------------------------------------");
			System.out.println("1.Ïû•Î∞îÍµ¨Îãà Îã¥Í∏∞        2.Ïû•Î∞îÍµ¨Îãà Í∞ÄÍ∏∞        3.ÎèåÏïÑÍ∞ÄÍ∏∞");
			System.out.println("ÏûÖÎ†•>>");
			System.out.println("---------------------------------------------------------------------");
			switch(ScanUtil.nextInt()) {
			case 1: return View.MARKET_CARTINSERT;
			case 2: clearScreen(); return View.MARKET_CARTLIST;
			case 3: clearScreen(); return View.MARKET;
			}
		} else {
			System.out.println("===========================ÏÉÅÌíàÎ™©Î°ù==================================");
			System.out.println("---------------------------------------------------------------------");
			System.out.println("Î≤àÌò∏\tÎ∂ÑÎ•ò\t\tÏÉÅÌíàÎ™Ö\t\t\tÍ∞ÄÍ≤©");
			System.out.println("---------------------------------------------------------------------");
			List<Map<String, Object>> etcList = dao.etcList();
			for(Map<String, Object> item : etcList) {
				System.out.print(SpaceUtil.format(item.get("PROD_NUM"), 2,true));
				System.out.print("\t" + SpaceUtil.format(item.get("PROD_TYPE"), 7));
				System.out.print("\t" + SpaceUtil.format(item.get("PROD_NAME"), 12));
				System.out.print("\t\t" + String.format("%,6d", Integer.parseInt(String.valueOf(item.get("PROD_PRICE")))));
				System.out.println();

			}
			System.out.println("---------------------------------------------------------------------");
			System.out.println("1.Ïû•Î∞îÍµ¨Îãà Îã¥Í∏∞        2.Ïû•Î∞îÍµ¨Îãà Í∞ÄÍ∏∞        3.ÎèåÏïÑÍ∞ÄÍ∏∞");
			System.out.println("ÏûÖÎ†•>>");
			System.out.println("---------------------------------------------------------------------");
			switch(ScanUtil.nextInt()) {
			case 1: return View.MARKET_CARTINSERT;
			case 2: clearScreen(); return View.MARKET_CARTLIST;
			case 3: clearScreen(); return View.MARKET;
			}
		}
		clearScreen();
		return View.MARKET;
	}
	
// dlRKwl
	public int cartInsert() {
		System.out.println("---------------------------------------------------------------------");
		System.out.println("ÏÉÅÌíà Î≤àÌò∏ ÏûÖÎ†•");
		System.out.println("ÏàúÎ≤à ÏûÖÎ†•>>");
		System.out.println("---------------------------------------------------------------------");
		buyNum = ScanUtil.nextInt();
		System.out.println("Íµ¨ÏûÖÌï† ÏàòÎüâÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.");
		System.out.println("ÏûÖÎ†•>>");
		System.out.println("---------------------------------------------------------------------");
		buyQty = ScanUtil.nextInt();
		int cartInsert = dao.cartInsert(buyNum, buyQty, (String) Controller.loginInfo.get("MEM_ID"));// Ïó¨Í∏∞ ÏïÑÏù¥Îîî Î∞îÍøî~~
		if (cartInsert > 0) {
			clearScreen();
			System.out.println("---------------------------------------------------------------------");
			System.out.println("Ìï¥Îãπ ÏÉÅÌíàÏùÑ Ïû•Î∞îÍµ¨ÎãàÏóê Îã¥ÏïòÏäµÎãàÎã§.");
			System.out.println("1.Ïû•Î∞îÍµ¨Îãà Ïù¥Îèô       2.ÏÉÅÌíà ÎçîÎ≥¥Í∏∞");
			System.out.println("---------------------------------------------------------------------");
			System.out.println("ÏûÖÎ†•>>");
			System.out.println("---------------------------------------------------------------------");
			switch(ScanUtil.nextInt()) {
			case 1: clearScreen(); return View.MARKET_CARTLIST;
			case 2: default: clearScreen(); return View.MARKET_BUY;			
			}
		} else {
			System.out.println("---------------------------------------------------------------------");
			System.out.println("Ìï¥Îãπ ÏÉÅÌíàÏùÑ Ïû•Î∞îÍµ¨ÎãàÏóê Îã¥ÏßÄ Î™ªÌïòÏòÄÏäµÎãàÎã§.");
			System.out.println("ÏÉÅÌíà Î≤àÌò∏Î•º ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî.");
			System.out.println("---------------------------------------------------------------------");
			buyProcess();
		}

		clearScreen(); return View.MARKET;
	}
///
	public int cartInsert2() {
		System.out.println("---------------------------------------------------------------------");
		System.out.println("Íµ¨ÏûÖÌï† ÏàòÎüâÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.");
		System.out.println("ÏûÖÎ†•>>");
		System.out.println("---------------------------------------------------------------------");
		buyQty = ScanUtil.nextInt();
		int cartInsert = dao.cartInsert(buyNum2, buyQty, (String) Controller.loginInfo.get("MEM_ID"));
		if (cartInsert > 0) {
			clearScreen();
			System.out.println("---------------------------------------------------------------------");
			System.out.println("Ìï¥Îãπ ÏÉÅÌíàÏùÑ Ïû•Î∞îÍµ¨ÎãàÏóê  Îã¥ÏïòÏäµÎãàÎã§.");
			System.out.println("1.Ïù¥Îèô                2.ÏÉÅÌíà ÎçîÎ≥¥Í∏∞");
			System.out.println("---------------------------------------------------------------------");
			System.out.println("ÏûÖÎ†•>>");
			System.out.println("---------------------------------------------------------------------");
			switch(ScanUtil.nextInt()) {
			case 1: clearScreen(); return View.MARKET_CARTLIST;
			case 2: default: clearScreen(); return View.MARKET_BUY;			
			}
		}else {
			System.out.println("---------------------------------------------------------------------");
			System.out.println("Ìï¥Îãπ ÏÉÅÌíàÏùÑ Ïû•Î∞îÍµ¨ÎãàÏóê Îã¥ÏßÄ Î™ªÌïòÏòÄÏäµÎãàÎã§.");
			System.out.println("ÏÉÅÌíà Î≤àÌò∏Î•º ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî.");
			System.out.println("---------------------------------------------------------------------");
			buyProcess();
		}
		clearScreen();
		return View.MARKET;

	}
///
	public int cartList() {
		System.out.println("==========================Ïû•Î∞îÍµ¨Îãà Î™©Î°ù==============================");
		System.out.println("---------------------------------------------------------------------");
		System.out.println("Î≤àÌò∏\tÎ∂ÑÎ•ò\t\tÏÉÅÌíàÎ™Ö\t\t  Í∞ÄÍ≤©\t   ÏàòÎüâ\t     Ï¥ùÍ∏àÏï°");
		System.out.println("---------------------------------------------------------------------");
		List<Map<String, Object>> cartList = dao.cartList((String) (Controller.loginInfo.get("MEM_ID"))); // Ïó¨Í∏∞ ÏïÑÏù¥Îîî ÎÑ£Ïñ¥ÏïºÌï®
		if (cartList == null) {
			System.out.println("Ïû•Î∞îÍµ¨ÎãàÍ∞Ä ÎπÑÏñ¥ÏûàÏäµÎãàÎã§!");
			if (input == 1) {
				System.out.println("ÎåïÎåïÏù¥Î•º ÏúÑÌïú ÏÑ†Î¨ºÏùÑ ÏÇ¨Î≥¥ÎäîÍ≤å Ïñ¥ÎïåÏöî?");
			} else if (input == 2) {
				System.out.println("Í≥†ÏñëÏù¥Î•º ÏúÑÌïú ÏÑ†Î¨ºÏùÑ ÏÇ¨Î≥¥ÎäîÍ≤å Ïñ¥ÎïåÏöî?");
			} else if (input == 3) {
				System.out.println("ÌñÑÏ∞åÎ•º ÏúÑÌïú ÏÑ†Î¨ºÏùÑ ÏÇ¨Î≥¥ÎäîÍ≤å Ïñ¥ÎïåÏöî?");
			}
			System.out.println("---------------------------------------------------------------------");
			for (int i = 0; i < 1; i++) {
				try {
					TimeUnit.SECONDS.sleep(2);
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			return View.MARKET_MYINFO;
		} else {
			for(Map<String, Object> item : cartList) {
				System.out.print(SpaceUtil.format(item.get("ORDER_NUM"), 2,true));
				System.out.print("\t" + SpaceUtil.format(item.get("PROD_TYPE"), 7));
				System.out.print("\t" + SpaceUtil.format(item.get("PROD_NAME"), 10));
				System.out.print("\t" + String.format("%,6d", Integer.parseInt(String.valueOf(item.get("PROD_PRICE")))));
				System.out.print("\t    " + SpaceUtil.format(item.get("ORDER_QTY"), 3));
				System.out.print("\t     " + String.format("%,6d", Integer.parseInt(String.valueOf(item.get("TOTAL")))));
				System.out.println();
			}
		}
		System.out.println("---------------------------------------------------------------------");

		for (int i = 0; i < 1; i++) {
			int money = 0;
			for (Map<String, Object> item : cartList) {
				money += Integer.parseInt(String.valueOf(item.get("PROD_PRICE")))
						* Integer.parseInt(String.valueOf(item.get("ORDER_QTY")));
//			System.out.println(String.format("%,d", Integer.parseInt(String.valueOf(item.get("Ï¥ù Í≤∞Ï†ú Í∏àÏï°")))));
			}
			System.out.printf("Ï¥ù Í≤∞Ï†ú Í∏àÏï°: %,6d", money) ;
			paidMoney = money;
			}
			System.out.println();
			System.out.println("---------------------------------------------------------------------");
			System.out.println("---------------------------------------------------------------------");
			System.out.println("1.Í≤∞Ï†úÌïòÍ∏∞   2.ÏÑ†ÌÉù Íµ¨Îß§    3.ÏÑ†ÌÉùÏÇ≠Ï†ú    4.Ï†ÑÏ≤¥ÏÇ≠Ï†ú  5.Ï†ïÎ≥¥ ÎèåÏïÑÍ∞ÄÍ∏∞");
			System.out.println("ÏûÖÎ†•>>");
			System.out.println("---------------------------------------------------------------------");
		switch (ScanUtil.nextInt()) {
		case 1:
			clearScreen();
			return View.MARKET_CARTPURCHASE;
		case 2:
			return View.MARKET_CARTPURCHASECHOICE;
		case 3:
			return View.MARKET_CARTDELETE;
		case 4:
			clearScreen();
			return View.MARKET_CARTDELETE2;
		case 5:
			clearScreen();
		default:
			return View.MARKET_MYINFO;
		}
	}

	public int cartDelete() {
		System.out.println("---------------------------------------------------------------------");
		System.out.println("ÏÇ≠Ï†ú Î™©Î°ù ÏÑ†ÌÉù");
		System.out.println("ÏûÖÎ†•>>");
		System.out.println("---------------------------------------------------------------------");
		int cartDelete = dao.cartDelete(ScanUtil.nextInt());
		if(cartDelete > 0) {
			clearScreen();
			System.out.println("ÏÇ≠Ï†ú ÏôÑÎ£å!!");
			for(int i = 0; i < 3 ; i++){
				try {
					TimeUnit.SECONDS.sleep(1);
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
			}
			clearScreen();
		}else {
			clearScreen();
			System.out.println("ÏÇ≠Ï†ú Ïã§Ìå®");
			for(int i = 0; i < 3 ; i++){
				try {
					TimeUnit.SECONDS.sleep(1);
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
			}
			clearScreen();
		}
		return View.MARKET_CARTLIST;
	}

	public int cartDelete2() {
		int cartDelete2 = dao.cartDelete2((String) Controller.loginInfo.get("MEM_ID"));
		if (cartDelete2 > 0) {
			clearScreen();
			System.out.println("ÏÇ≠Ï†ú ÏôÑÎ£å!!");
			for(int i = 0; i < 3 ; i++){
				try {
					TimeUnit.SECONDS.sleep(1);
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
			}
			clearScreen();
			return View.MARKET_CARTLIST;
		} else {
			clearScreen();
			System.out.println("ÏÇ≠Ï†ú Ïã§Ìå®");
			for(int i = 0; i < 3 ; i++){
				try {
					TimeUnit.SECONDS.sleep(1);
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
			}
			clearScreen();
			return View.MARKET_CARTLIST;
		}
	}

	public int cartPurchase() {

		List<Map<String, Object>> showMyInfo = dao.showMyInfo((String) Controller.loginInfo.get("MEM_ID"));
		Map<String, Object> mem_mile = showMyInfo.get(0); // ÏñòÎäî ÎêòÍ≥†
//		selectCart = new ArrayList<Integer>();
		
		try {
			if (Integer.parseInt(String.valueOf((mem_mile.get("MEM_MILE")))) >= paidMoney) {
				myMile = Integer.parseInt(String.valueOf((mem_mile.get("MEM_MILE")))) - paidMoney;
				int cartPurchase = dao.cartPurchase(myMile, (String) Controller.loginInfo.get("MEM_ID"), paidMoney);
				if (cartPurchase > 0) {
					System.out.println("\t Í≤∞Ï†úÏ§ë");
					for (int i = 0; i < 3; i++) {
						try {
							System.out.println("\t   .");
							TimeUnit.SECONDS.sleep(1);
						} catch (InterruptedException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
					}
					clearScreen();
					System.out.println("---------------------------------------------------------------------");
					System.out.println("Íµ¨Îß§ ÏôÑÎ£å!");
					System.out.println("---------------------------------------------------------------------");
					System.out.print(SpaceUtil.format("Í≤∞Ï†úÏ†Ñ ÎßàÏùºÎ¶¨ÏßÄ: ", 8));
					System.out.println(String.format("%,d", Integer.parseInt(String.valueOf((mem_mile.get("MEM_MILE"))))));
					System.out.print(SpaceUtil.format("Ï∞®Í∞ê ÎßàÏùºÎ¶¨ÏßÄ: ", 8));
					System.out.println(String.format("%,d", paidMoney));
					System.out.print(SpaceUtil.format("Í≤∞Ï†úÌõÑ ÎßàÏùºÎ¶¨ÏßÄ: ", 8));
					System.out.println(String.format("%,d", myMile));
					Controller.loginInfo.replace("MEM_MILE",myMile);
					System.out.println("---------------------------------------------------------------------");
					System.out.println("1.Íµ¨Îß§ Ïù¥Î†• Ï°∞Ìöå     2.ÏÉÅÌíà ÎçîÎ≥¥Í∏∞");
					System.out.println("ÏûÖÎ†•>>");
					System.out.println("---------------------------------------------------------------------");
					switch (ScanUtil.nextInt()) {
					case 1:
						clearScreen();
						return View.MARKET_BUYLIST;
					case 2:
					default:
						clearScreen();
						return View.MARKET_BUY;
					}
				}
			} else {
				System.out.println("\t Í≤∞Ï†úÏ§ë");
				for (int i = 0; i < 3; i++) {
					try {
						System.out.println("\t   .");
						TimeUnit.SECONDS.sleep(1);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
				clearScreen();
				System.out.println("-------------------------------------------------");
				System.out.println("ÎßàÏùºÎ¶¨ÏßÄÍ∞Ä Î∂ÄÏ°±Ìï©ÎãàÎã§.");
				System.out.println("ÎßàÏùºÎ¶¨ÏßÄÎ•º Ï∂©Ï†ÑÌï¥Ï£ºÏÑ∏Ïöî.");
				System.out.println("-------------------------------------------------");
				System.out.println("1. Ï∂©Ï†ÑÏÜå    2. ÎßàÏºìÎ©îÏù∏");
				System.out.println("ÏûÖÎ†• >>");
				System.out.println("-------------------------------------------------");
				switch (ScanUtil.nextInt()) {
				case 1:
					return View.MEM_MILE;
				case 2:
					return View.MARKET;

				}
			}
		} catch (Exception e) {
			if (Integer.parseInt(String.valueOf((mem_mile.get("MEM_MILE")))) < paidMoney)
//			e.printStackTrace();
				System.out.println("ÎßàÏùºÎ¶¨ÏßÄÍ∞Ä Î∂ÄÏ°±Ìï©ÎãàÎã§.");
			System.out.println("ÎßàÏùºÎ¶¨ÏßÄÎ•º Ï∂©Ï†ÑÌï¥Ï£ºÏÑ∏Ïöî.");
			System.out.println("Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.");
			System.out.println("1. Ï∂©Ï†ÑÏÜå    2. ÎßàÏºìÎ©îÏù∏");
			System.out.println("ÏûÖÎ†•>>");
			switch (ScanUtil.nextInt()) {
			case 1:
				return View.MEM_MILE;
			case 2:
				return View.MARKET;

			}
			clearScreen();
			return View.MARKET;
		}
		clearScreen();
		return View.HOME;
	}
	
	
	
	

	

	public int myInfo() {
//		List<Map<String, Object>> showMyInfo = dao.showMyInfo(Controller.loginInfo.get("MEM_ID"));
//		List<Map<String,Object>> totalPayment = dao.totalPayment((String)Controller.loginInfo.get("MEM_ID"));
//		List<Map<String,Object>> Payment = dao.Payment(Controller.loginInfo.get("MEM_ID"));
		clearScreen();

		System.out.println("==============================MY PAGE================================");
		System.out.println("---------------------------------------------------------------------");
		System.out.println("ÏïÑÏù¥Îîî : " + Controller.loginInfo.get("MEM_ID"));
		System.out.println("ÎÇ¥ Î∞∞ÏÜ°ÏßÄ: " + Controller.loginInfo.get("MEM_ADD"));
		try {
			System.out.println("Î≥¥Ïú† ÎßàÏùºÎ¶¨ÏßÄ: " + String.format("%,6d", Integer.parseInt(String.valueOf(Controller.loginInfo.get("MEM_MILE")))));
		}catch(Exception e) {
			System.out.println("Î≥¥Ïú† ÎßàÏùºÎ¶¨ÏßÄÍ∞Ä ÏóÜÏäµÎãàÎã§.");
		}
		System.out.println("---------------------------------------------------------------------");
		System.out.println("1.Ïû•Î∞îÍµ¨Îãà Î≥¥Í∏∞    2.Íµ¨Îß§Ïù¥Î†• Ï°∞Ìöå    3.ÎßàÏùºÎ¶¨ÏßÄ Ï∂©Ï†ÑÌïòÍ∏∞  4.ÎèåÏïÑÍ∞ÄÍ∏∞");
		System.out.println("ÏûÖÎ†•>>");
		System.out.println("---------------------------------------------------------------------");
		switch (ScanUtil.nextInt()) {
		case 1:
			clearScreen();
			return View.MARKET_CARTLIST;
		case 2:
			clearScreen();
			return View.MARKET_BUYLIST;
		case 3:
			clearScreen();
			return View.MEM_MILE;
		case 4:
		default:
			clearScreen();
			if(Controller.mypage) {
				return View.MYPAGE;
			}else {
				return View.MARKET;
			}
			}
	}

	public int buyList() {
System.out.println("===================================Íµ¨Îß§ Î™©Î°ù==============================================");
		
		System.out.println("------------------------------------------------------------------------------------------");
		System.out.println("Î≤àÌò∏\tÍµ¨Îß§ÏΩîÎìú\t\t\tÍµ¨Îß§ÏùºÏãú\t\tÍµ¨Îß§ÎÇ¥Ïó≠\t Í≤∞Ï†úÍ∏àÏï°");
//		System.out.println("Î≤àÌò∏\tÎ∂ÑÎ•ò\t\tÏÉÅÌíàÎ™Ö\t\tÍ∞ÄÍ≤©\tÏàòÎüâ");

		System.out.println("-----------------------------------------------------------------------------------------");
		List<Map<String, Object>> buyList = dao.buytList((String) Controller.loginInfo.get("MEM_ID")); // Ïó¨Í∏∞ ÏïÑÏù¥Îîî ÎÑ£Ïñ¥ÏïºÌï®
		List<Map<String, Object>> buyCount = dao.buyCount((String) Controller.loginInfo.get("MEM_ID")); // Ïó¨Í∏∞ ÏïÑÏù¥Îîî ÎÑ£Ïñ¥ÏïºÌï®
		if (buyList == null) {
			System.out.println("Íµ¨Îß§Î™©Î°ùÏù¥ ÎπÑÏñ¥ÏûàÏäµÎãàÎã§!");
			System.out.println("ÎãπÏã†ÏùÄ Í≤ÄÏÜåÌïú ÏÇ¨Îûå!");

			System.out.println(
					"-----------------------------------------------------------------------------------------");
			for (int i = 0; i < 1; i++) {
				try {
					TimeUnit.SECONDS.sleep(2);
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			return View.MARKET_MYINFO;
		} else {
			for (int i = 0; i < buyList.size(); i++) {
				Map<String, Object> item2 = buyCount.get(i);
				Map<String, Object> item = buyList.get(i);
				System.out.print(item.get("BUY_NUM"));
				System.out.print("\t" + item.get("BUY_CODE"));
				System.out.print("\t\t" + item.get("BUY_DATE"));
				System.out.print("\t\t" + "Ï¥ù " + item2.get("COUNT") + "Í±¥");
				System.out.print(
						"\t\t" + String.format("%,8d", Integer.parseInt(String.valueOf(item.get("BUY_AMOUNT")))) + "Ïõê");
				System.out.println();

				System.out.println("-----------------------------------------------------------------------------------------");
			}
		}
		System.out.println();

		System.out.println("-----------------------------------------------------------------------------------------");
		System.out.println("1.ÏÉÅÏÑ∏ ÎÇ¥Ïó≠ Ï°∞Ìöå  2.ÎÇ¥ Ï†ïÎ≥¥Î°ú ÎèåÏïÑÍ∞ÄÍ∏∞");
		System.out.println("ÏûÖÎ†•>>");
		switch (ScanUtil.nextInt()) {
		case 1:
			return View.MARKET_WRITEREVIEW;
		case 2:
		default:
			clearScreen();
			return View.MARKET_MYINFO;
		}
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

	public int review() {
		System.out.println("ÏàúÎ≤à ÏûÖÎ†• >>");
		List<Map<String, Object>> list = dao.list4review(ScanUtil.nextLine());
		clearScreen();
		System.out.println("===================================Íµ¨Îß§ Î™©Î°ù====================================");
		System.out.println("---------------------------------------------------------------------------------");
		System.out.println(" ÏàúÎ≤à\tÏÉÅÌíàÏΩîÎìú\t\tÏÉÅÌíàÎ™Ö\t\t\t\t\tÏÉÅÌíàÍ∞ÄÍ≤©");
		System.out.println("---------------------------------------------------------------------------------");
		for(Map<String, Object> item : list) { 
			System.out.print("  "+SpaceUtil.format(item.get("ORDER_NUM"), 2,true));
			System.out.print("\t   " + SpaceUtil.format(item.get("PROD_ID"), 6));
			System.out.print("\t\t" + SpaceUtil.format(item.get("PROD_NAME"), 10));
			System.out.print("\t\t\t\t  " + String.format("%,6d", Integer.parseInt(String.valueOf(item.get("PROD_PRICE")))));
			System.out.println();
			System.out.println("---------------------------------------------------------------------------------");
		}
		System.out.println();
		System.out.println("---------------------------------------------------------------------------------");
		System.out.println("1.Î¶¨Î∑∞ ÏûëÏÑ±  2.ÎèåÏïÑÍ∞ÄÍ∏∞");
		System.out.println("ÏûÖÎ†• >>");
		System.out.println("---------------------------------------------------------------------------------");
		switch (ScanUtil.nextInt()) {
		case 1: 
			List<Object> param = new ArrayList<>();
			param.add(Controller.loginInfo.get("MEM_ID"));
			System.out.println("ÏàúÎ≤à ÏûÖÎ†•>>");
			System.out.println("---------------------------------------------------------------------------------");
			param.add(ScanUtil.nextInt());
			System.out.println("Ï†úÎ™© >> ");
			System.out.println("---------------------------------------------------------------------------------");
			param.add(ScanUtil.nextLine());
			System.out.println("ÎÇ¥Ïö© >> ");
			System.out.println("---------------------------------------------------------------------------------");
			param.add(ScanUtil.nextLine());
			int result = dao.insertReview(param);
			if(result > 0 ) {
				clearScreen();
				System.out.println("Î¶¨Î∑∞ Îì±Î°ù ÏÑ±Í≥µ!");
				for(int i = 0; i < 3 ; i++){
					try {
						TimeUnit.SECONDS.sleep(1);
					} catch (InterruptedException e) {
						e.printStackTrace();
					}
				}
				clearScreen();
			}else {
				System.out.println("Î¶¨Î∑∞ Îì±Î°ù Ïã§Ìå®!");
				for(int i = 0; i < 3 ; i++){
					try {
						TimeUnit.SECONDS.sleep(1);
					} catch (InterruptedException e) {
						e.printStackTrace();
					}
				}
			}
			return View.MARKET_BUYLIST;
		case 2: default : return View.MARKET_BUYLIST;	
		}
		
	}
	
	public int cartPurchaseChoice() {// 
		List<Map<String, Object>> showMyInfo = dao.showMyInfo((String)Controller.loginInfo.get("MEM_ID"));
		List<Map<String, Object>> cartList = dao.cartList((String)(Controller.loginInfo.get("MEM_ID")));
		Map<String, Object> mem_mile = showMyInfo.get(0);
		
		clearScreen();
		while(true) {
			System.out.println("==============================Ïû•Î∞îÍµ¨Îãà Î™©Î°ù======================================");
			System.out.println("---------------------------------------------------------------------------------");
			System.out.println("Î≤àÌò∏\tÎ∂ÑÎ•ò\t\tÏÉÅÌíàÎ™Ö\t\t Í∞ÄÍ≤©\t ÏàòÎüâ\t\t  Ï¥ùÍ∏àÏï°    Ï≤¥ÌÅ¨Î∞ïÏä§");
			System.out.println("---------------------------------------------------------------------------------");
			for(Map<String, Object> item : cartList) {
				
				
				System.out.print(SpaceUtil.format(item.get("ORDER_NUM"), 2,true));
				System.out.print("\t" + SpaceUtil.format(item.get("PROD_TYPE"), 7));
				System.out.print("\t " + SpaceUtil.format(item.get("PROD_NAME"), 10));
				System.out.print("\t" + String.format("%,6d", Integer.parseInt(String.valueOf(item.get("PROD_PRICE")))));
				System.out.print("\t    " + SpaceUtil.format(item.get("ORDER_QTY"), 3));
				System.out.print("\t\t  " + String.format("%,6d", Integer.parseInt(String.valueOf(item.get("TOTAL")))));
				if(selectCart.contains(Integer.parseInt(item.get("ORDER_NUM").toString()))) {
					System.out.print("\t‚ô•");
				}
				System.out.println();
			}		
			
			
			
			
			System.out.println("---------------------------------------------------------------------------------");
			System.out.println("Íµ¨Îß§Ìï† ÏÉÅÌíà Î≤àÌò∏Î•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî");
			System.out.println("ÏûÖÎ†•>>");
			System.out.println("---------------------------------------------------------------------------------");
			int num = ScanUtil.nextInt();
			if(selectCart.contains(num)) {
				clearScreen();
				System.out.println("Ïù¥ÎØ∏ ÏÑ†ÌÉùÌïú ÏÉÅÌíàÏûÖÎãàÎã§.");
				if(cartList.size() == selectCart.size()) {
					System.out.println("---------------------------------------------------------------------------------");
					System.out.println("Îçî Ïù¥ÏÉÅ ÏÑ†ÌÉùÌï† ÏÉÅÌíàÏù¥ ÏóÜÏäµÎãàÎã§.");
					System.out.println("Íµ¨Îß§Î•º ÏßÑÌñâÌï¥ Ï£ºÏÑ∏Ïöî.");
					System.out.println("---------------------------------------------------------------------------------");
					return View.MARKET_CARTPURCHASE2;
				}else {
					continue;
				}
			}else {
				selectCart.add(num);
				System.out.println("---------------------------------------------------------------------------------");
				System.out.println("1.ÏÉÅÌíà Ï∂îÍ∞Ä ÏÑ†ÌÉù    2.ÏÑ†ÌÉùÌïú Î™©Î°ùÎßå Íµ¨Îß§");
				switch(ScanUtil.nextInt()) {
				case 1: clearScreen(); break;		
				case 2: return View.MARKET_CARTPURCHASE2;
			}
			
			/* Ï§ëÏöî Ï£ºÏÑù
			 * MarketService.getInstance().selectCart = new ArrayList<Integer>(); 
			 * Î¶¨Ïä§Ìä∏ ÎπÑÏõåÏ£ºÎäî Ï§ëÏöîÌï®ÏùÑ Í∏∞Ïñµ
			 * */ 
			}
		}
		
	}
	
	public int cartPurchase2() {

		List<Map<String, Object>> showMyInfo = dao.showMyInfo((String) Controller.loginInfo.get("MEM_ID"));
		Map<String, Object> mem_mile = showMyInfo.get(0); // ÏñòÎäî ÎêòÍ≥†
		
		List<Map<String, Object>> choiceTotal = dao.choiceMoney(selectCart,String.valueOf(Controller.loginInfo.get("MEM_ID")));
		int total = 0 ;
		for(Map<String, Object> item : choiceTotal) {
			total += Integer.parseInt(String.valueOf(item.get("Í≤∞Ï†úÍ∏àÏï°"))) ;
		}
		
		try {
			if (Integer.parseInt(String.valueOf((mem_mile.get("MEM_MILE")))) >= total) {
				myMile = Integer.parseInt(String.valueOf((mem_mile.get("MEM_MILE")))) - total;
				int cartPurchase = dao.cartPurchase2(myMile, (String) Controller.loginInfo.get("MEM_ID"), total,selectCart);
				if (cartPurchase > 0) {
					System.out.println("\t Í≤∞Ï†úÏ§ë");
					for (int i = 0; i < 3; i++) {
						try {
							System.out.println("\t   .");
							TimeUnit.SECONDS.sleep(1);
						} catch (InterruptedException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
					}
					clearScreen();
					selectCart = new ArrayList<>();
					System.out.println("---------------------------------------------------------------------------------");
					System.out.println("Íµ¨Îß§ ÏôÑÎ£å!");
					System.out.println("---------------------------------------------------------------------------------");
					System.out.print(SpaceUtil.format("Í≤∞Ï†úÏ†Ñ ÎßàÏùºÎ¶¨ÏßÄ: ", 8));
					System.out.println(String.format("%,d", Integer.parseInt(String.valueOf((mem_mile.get("MEM_MILE"))))));
					System.out.print(SpaceUtil.format("Ï∞®Í∞ê ÎßàÏùºÎ¶¨ÏßÄ: ", 8));
					System.out.println(String.format("%,d", total));
					System.out.print(SpaceUtil.format("Í≤∞Ï†úÌõÑ ÎßàÏùºÎ¶¨ÏßÄ: ", 8));
					System.out.println(String.format("%,d", myMile));
					Controller.loginInfo.replace("MEM_MILE",myMile);
					System.out.println("---------------------------------------------------------------------------------");
					System.out.println("1.Íµ¨Îß§ Ïù¥Î†• Ï°∞Ìöå   2.ÏÉÅÌíà ÎçîÎ≥¥Í∏∞");
					System.out.println("ÏûÖÎ†•>>");
					System.out.println("---------------------------------------------------------------------------------");
					switch (ScanUtil.nextInt()) {
					case 1:
						clearScreen();
						
						return View.MARKET_BUYLIST;
					case 2:
					default:
						clearScreen();
						return View.MARKET_BUY;
					}
				}
			} else {
				System.out.println("\t Í≤∞Ï†úÏ§ë");
				for (int i = 0; i < 3; i++) {
					try {
						System.out.println("\t   .");
						TimeUnit.SECONDS.sleep(1);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
				clearScreen();
				System.out.println("---------------------------------------------------------------------------------");
				System.out.println("ÎßàÏùºÎ¶¨ÏßÄÍ∞Ä Î∂ÄÏ°±Ìï©ÎãàÎã§.");
				System.out.println("ÎßàÏùºÎ¶¨ÏßÄÎ•º Ï∂©Ï†ÑÌï¥Ï£ºÏÑ∏Ïöî.");
				System.out.println("---------------------------------------------------------------------------------");
				System.out.println("1. Ï∂©Ï†ÑÏÜå    2. ÎßàÏºìÎ©îÏù∏");
				System.out.println("ÏûÖÎ†• >>");
				System.out.println("---------------------------------------------------------------------------------");
				switch (ScanUtil.nextInt()) {
				case 1:
					return View.MEM_MILE;
				case 2:
					return View.MARKET;

				}
			}
		} catch (Exception e) {
			clearScreen();
			if (Integer.parseInt(String.valueOf((mem_mile.get("MEM_MILE")))) < total  )
//			e.printStackTrace();
				System.out.println("---------------------------------------------------------------------------------");
				System.out.println("ÎßàÏùºÎ¶¨ÏßÄÍ∞Ä Î∂ÄÏ°±Ìï©ÎãàÎã§.");
			System.out.println("ÎßàÏùºÎ¶¨ÏßÄÎ•º Ï∂©Ï†ÑÌï¥Ï£ºÏÑ∏Ïöî.");
			System.out.println("---------------------------------------------------------------------------------");
			System.out.println("Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.");
			System.out.println("1. Ï∂©Ï†ÑÏÜå    2. ÎßàÏºìÎ©îÏù∏");
			System.out.println("---------------------------------------------------------------------------------");
			System.out.println("ÏûÖÎ†•>>");
			switch (ScanUtil.nextInt()) {
			case 1:
				return View.MEM_MILE;
			case 2:
				return View.MARKET;

			}
			clearScreen();
			return View.MARKET;
		}
		clearScreen();
		return View.HOME;
	}
	
	

	public static void clearScreen() {
		for (int i = 0; i < 45; i++) {
			System.out.println();
		}
	}
	
	
	

}
